<div class="container">
  <div class="row centered-form">
    <div class="col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2">
      <div class="panel panel-default">
        <div class="panel-heading">
          <h3 class="panel-title">Set Your Own horizon! <small>And get the funding you need</small></h3>
        </div>
        <div class="panel-body">
          <form action="/projects" method="post" enctype="multipart/form-data">
            <h4>Project Basics</h4>
            <div class="form-group">
              <input type="text" name="project[project_name]" class="form-control input-sm" placeholder="Project Name">
            </div>

            <div class="form-group">
              <textarea name="project[project_description]" class="form-control input-sm" placeholder="Description"></textarea>
            </div>

            <div class="form-group">
              <input type="text" name="tags" class="form-control input-sm" placeholder="Tags (space-separated)">
            </div>

             <div class="form-group">
              <input type="text" name="location" id="autocomplete" class="form-control input-sm" onFocus="geolocate()" placeholder="Location (auto-complete)">
            </div>

            <hr>
            <h4>Project Media</h4>
            <strong>Project cover image</strong>
            <div class="form-group">
              <input type="file" name="coverphoto" class="form-control input-sm">
            </div>


            <div class="form-group">
              <input type="text" name="project[website_url]" class="form-control input-sm" placeholder="Website">
            </div>

            <div class="form-group">
              <input type="text" name="project[facebook_url]" class="form-control input-sm" placeholder="Facebook Page">
            </div>

            <div class="form-group">
              <input type="text" name="project[twitter_handle]" class="form-control input-sm" placeholder="Twitter Handle">
            </div>

            <div class="form-group">
              <input type="text" name="project[instagram_url]" class="form-control input-sm" placeholder="Instagram">
            </div>

            <hr>

            <h4>Sponsorship Call</h4>
            <div class="form-group">
              <textarea name="project[target_audience]" class="form-control input-sm" placeholder="Target audience"></textarea>
            </div>

            <div class="form-group">
              <textarea name="project[sponsorship_format]" class="form-control input-sm" placeholder="What kind of sponsoring are you looking for?"></textarea>
            </div>

            <input type="submit" value="Create your project" class="btn btn-info btn-block">

          </form>
        </div>
      </div>
    </div>
  </div>
</div>

 <script>
      // This example displays an address form, using the autocomplete feature
      // of the Google Places API to help users fill in the information.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }

      function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
          document.getElementById(component).value = '';
          document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];
          if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(addressType).value = val;
          }
        }
      }

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?libraries=places&callback=initAutocomplete" async defer>
    </script>
